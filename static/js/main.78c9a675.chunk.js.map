{"version":3,"sources":["Components/Counter.js","Components/Navbar.js","App.js","index.js"],"names":["Counter","className","this","props","counter","value","onClick","onIncrement","onReset","id","onDelete","Component","Navbar","total","App","handleIncrement","newCounters","state","counters","setState","handleReset","handleDelete","bind","filter","forEach","getTotalValue","map","index","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTA8BeA,E,uKAxBD,IAAD,OACL,OACI,6BACI,0BAAMC,UAAY,2DAAlB,IAA8EC,KAAKC,MAAMC,QAAQC,MAAjG,KAEA,4BAAQJ,UAAY,sDAAsDK,QAAW,WACjF,EAAKH,MAAMI,YAAY,EAAKJ,MAAMC,WADtC,aAIA,4BAAQH,UAAY,mDAAmDK,QAAW,WAC9E,EAAKH,MAAMK,QAAQ,EAAKL,MAAMC,QAAQK,MAD1C,SAIA,4BAAQR,UAAY,qDAAqDK,QAAW,WAChF,EAAKH,MAAMO,SAAS,EAAKP,MAAMC,QAAQK,MAD3C,iB,GAfME,aCSPC,E,uKANP,OACI,4BAAQX,UAAY,2CAApB,WAAuEC,KAAKC,MAAMU,MAAlF,S,GALSF,aCyENG,G,wDApEb,aAAe,IAAD,8BACZ,gBAcAC,gBAAmB,SAACX,GACpB,IAAIY,EAAW,YAAO,EAAKC,MAAMC,UACjCF,EAAYZ,EAAQK,IAApB,eAA8BL,GAC9BY,EAAYZ,EAAQK,IAAIJ,QACxB,EAAKc,SAAU,CAAED,SAAUF,KAnBf,EAsBdI,YAAc,SAACX,GACb,IAAIO,EAAc,EAAKC,MAAMC,SAC7BF,EAAYP,GAAIJ,MAAQ,EACxB,EAAKc,SAAS,CAAED,SAAUF,KAvB1B,EAAKC,MAAQ,CACXC,SAAU,CACR,CAACT,GAAI,EAAGJ,MAAO,GACf,CAACI,GAAI,EAAGJ,MAAO,GACf,CAACI,GAAI,EAAGJ,MAAO,GACf,CAACI,GAAI,EAAGJ,MAAO,KAKnB,EAAKgB,aAAe,EAAKA,aAAaC,KAAlB,gBAZR,E,yDA4BAb,GACZ,IAAIO,EAAcd,KAAKe,MAAMC,SAASK,QAAQ,SAACnB,GAC7C,OAAIA,EAAQK,KAAOA,KAMrBP,KAAKiB,SAAS,CAAED,SAAUF,M,sCAI1B,IAAIH,EAAQ,EAIZ,OAHAX,KAAKe,MAAMC,SAASM,SAAS,SAACpB,GAC5BS,GAAST,EAAQC,SAEZQ,I,+BAIC,IAAD,OACP,OACA,6BACE,kBAAC,EAAD,CAAQA,MAASX,KAAKuB,kBACrBvB,KAAKe,MAAMC,SAASQ,KAAK,SAACtB,EAASuB,GAClC,OAAQ,kBAAC,EAAD,CACJC,IAAOD,EACPvB,QAAWA,EACXG,YAAe,EAAKQ,gBACpBP,QAAW,EAAKY,YAChBV,SAAY,EAAKW,uB,GA5DXV,c,MCAlBkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.78c9a675.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass Counter extends Component {\n\n    render() {\n        return (\n            <div>\n                <span className = 'badge badge-primary p-3 m-3 text-light font-weight-bold'> {this.props.counter.value} </span>\n\n                <button className = 'btn btn-warning p-2 m-2 text-light font-weight-bold' onClick = {() => {\n                    this.props.onIncrement(this.props.counter);\n                }}>Increment</button> \n\n                <button className = 'btn btn-info p-2 m-2 text-light font-weight-bold' onClick = {() => {\n                    this.props.onReset(this.props.counter.id);\n                }}>Reset</button>\n\n                <button className = 'btn btn-danger p-2 m-2 text-light font-weight-bold' onClick = {() => {\n                    this.props.onDelete(this.props.counter.id);\n                }}> Delete </button>\n            </div>\n        )\n\n    }\n\n\n}\n\nexport default Counter;","import React, { Component } from 'react';\n\n\nclass Navbar extends Component {\n\n    render () {\n\n        return (\n            <header className = 'bg-dark text-white p-3 font-weight-bold'> Total: {this.props.total} </header>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport Counter from './Components/Counter';\nimport Navbar from './Components/Navbar';\nimport './App.css';\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      counters: [\n        {id: 0, value: 0},\n        {id: 1, value: 0},\n        {id: 2, value: 0},\n        {id: 3, value: 0}\n      ]\n    }\n    // this.onIncrement = this.onIncrement.bind(this);\n    // this.resetValues = this.resetValues.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n    handleIncrement =  (counter) => {\n    let newCounters = [...this.state.counters];\n    newCounters[counter.id] = {...counter};\n    newCounters[counter.id].value++;\n    this.setState( { counters: newCounters })\n  }\n\n  handleReset = (id) => {\n    let newCounters = this.state.counters;\n    newCounters[id].value = 0;\n    this.setState({ counters: newCounters })\n  }\n\n  handleDelete (id) {\n    let newCounters = this.state.counters.filter( (counter) => {\n      if (counter.id === id) {\n        return false\n      } else {\n        return true\n      }\n    })\n    this.setState({ counters: newCounters })\n  }\n\n  getTotalValue() {\n    let total = 0;\n    this.state.counters.forEach( (counter) => {\n      total += counter.value;\n    })\n    return total;\n  }\n\n  \n  render() {\n    return (\n    <div>\n      <Navbar total = {this.getTotalValue()}/>\n      {this.state.counters.map( (counter, index) => {\n        return (<Counter \n            key = {index} \n            counter = {counter} \n            onIncrement = {this.handleIncrement} \n            onReset = {this.handleReset} \n            onDelete = {this.handleDelete}\n        />)\n      })}\n    </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}